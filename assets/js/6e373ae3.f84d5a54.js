"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[4518,9074,9948,4931,7367,1056,8562],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=r,h=m["".concat(l,".").concat(p)]||m[p]||u[p]||i;return n?o.createElement(h,a(a({ref:t},d),{},{components:n})):o.createElement(h,a({ref:t},d))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},50358:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(67294),r=n(52263);const i="authorByline_VoxI",a="authorLabel_a70t",s="authorProfileImage_URwT";const l=function(e){let{frontMatter:t}=e;const{siteConfig:n}=(0,r.Z)(),l=n.customFields.authors;return o.createElement(o.Fragment,null,t.authors&&o.createElement("div",{className:"docAuthors"},o.createElement("hr",null),t.authors.map((e=>o.createElement("div",{key:e,className:i},o.createElement("img",{className:s,src:`/img/${l[e].image?l[e].image:"default_author_profile_pic.png"}`,alt:`Profile picture for ${l[e].name}`}),o.createElement("div",null,o.createElement("div",{className:a},"Author:"),o.createElement("div",null,o.createElement("a",{href:l[e].link,target:"_blank"},l[e].name),", ",l[e].title))))),o.createElement("hr",null)))}},41514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const i={},a=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/additional-resources",id:"howtos/solutions/real-time-inventory/common-rti/additional-resources",title:"additional-resources",description:"- Redis YouTube channel",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/additional-resources.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/additional-resources",permalink:"/howtos/solutions/real-time-inventory/common-rti/additional-resources",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/additional-resources.mdx",tags:[],version:"current",lastUpdatedAt:1700152680,formattedLastUpdatedAt:"Nov 16, 2023",frontMatter:{}},l={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/c/Redisinc"},"Redis YouTube channel")),(0,r.kt)("li",{parentName:"ul"},"Clients like ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/redis/node-redis"},"Node Redis")," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/redis/redis-om-node"},"Redis om Node")," help you to use Redis in Node.js applications."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://redis.com/redis-enterprise/redis-insight/"},"RedisInsight")," : To view your Redis data or to play with raw Redis commands in the workbench"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://redis.com/try-free/"},"Try Redis Cloud for free"))))}u.isMDXComponent=!0},96098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const i={},a=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/customer-proofs",id:"howtos/solutions/real-time-inventory/common-rti/customer-proofs",title:"customer-proofs",description:"- Redis Cloud on Google Cloud Platform enables Ulta Beauty to build a \u201cdigital store of the future\u201d",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/customer-proofs.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/customer-proofs",permalink:"/howtos/solutions/real-time-inventory/common-rti/customer-proofs",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/customer-proofs.mdx",tags:[],version:"current",lastUpdatedAt:1700152680,formattedLastUpdatedAt:"Nov 16, 2023",frontMatter:{}},l={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Redis Cloud on Google Cloud Platform enables ",(0,r.kt)("a",{parentName:"li",href:"https://redis.com/customers/ulta-beauty/"},(0,r.kt)("u",null,(0,r.kt)("strong",{parentName:"a"},"Ulta Beauty to build a \u201cdigital store of the future\u201d"))))))}u.isMDXComponent=!0},18392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const i={},a=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/rti-challenges",id:"howtos/solutions/real-time-inventory/common-rti/rti-challenges",title:"rti-challenges",description:"- Over and under-stocking: While adopting a multi-channel business model (online & in store), lack of inventory visibility results in over and under-stocking of inventory in different regions and stores.",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/rti-challenges.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/rti-challenges",permalink:"/howtos/solutions/real-time-inventory/common-rti/rti-challenges",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/rti-challenges.mdx",tags:[],version:"current",lastUpdatedAt:1686097580,formattedLastUpdatedAt:"Jun 7, 2023",frontMatter:{}},l={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Over and under-stocking"),": While adopting a multi-channel business model (online & in store), lack of inventory visibility results in over and under-stocking of inventory in different regions and stores.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Consumers ",(0,r.kt)("strong",{parentName:"p"},"seek convenience"),": The ability to search across regional store locations and pickup merchandise ",(0,r.kt)("strong",{parentName:"p"},"immediately")," rather than wait for shipping is a key differentiator for retailers.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Consumers ",(0,r.kt)("strong",{parentName:"p"},"seek speed"),": All retailers, even small or family-run, must compete against the ",(0,r.kt)("strong",{parentName:"p"},"customer experience")," of large online retailers like Alibaba, FlipKart, Shopee, and Amazon.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"High inventory costs"),": Retailers seek to lower inventory costs by eliminating missed sales from out-of-stock scenarios which also leads to higher \u201cinventory turnover ratios.\u201d")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Brand value"),": Inaccurate store inventory counts lead to frustrated customers and lower sales. The operational pain will ",(0,r.kt)("strong",{parentName:"p"},"impact the status quo"),"."))))}u.isMDXComponent=!0},44094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const i={},a=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/source-code-tip",id:"howtos/solutions/real-time-inventory/common-rti/source-code-tip",title:"source-code-tip",description:"Below is a command to the clone the source code for the application used in this tutorial",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/source-code-tip.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/source-code-tip",permalink:"/howtos/solutions/real-time-inventory/common-rti/source-code-tip",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/source-code-tip.mdx",tags:[],version:"current",lastUpdatedAt:1684866843,formattedLastUpdatedAt:"May 23, 2023",frontMatter:{}},l={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"GITHUB CODE",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Below is a command to the clone the source code for the application used in this tutorial"),(0,r.kt)("p",{parentName:"admonition"},"git clone ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redis-developer/redis-real-time-inventory-solutions"},"https://github.com/redis-developer/redis-real-time-inventory-solutions"))))}u.isMDXComponent=!0},73264:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const i={},a=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search-with-distance",id:"howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search-with-distance",title:"inventory-search-with-distance",description:"The code that follows shows an example API request and response for inventorySearchWithDistance API:",source:"@site/docs/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search-with-distance.mdx",sourceDirName:"howtos/solutions/real-time-inventory/local-inventory-search/api",slug:"/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search-with-distance",permalink:"/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search-with-distance",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search-with-distance.mdx",tags:[],version:"current",lastUpdatedAt:1686097580,formattedLastUpdatedAt:"Jun 7, 2023",frontMatter:{}},l={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for ",(0,r.kt)("inlineCode",{parentName:"p"},"inventorySearchWithDistance")," API:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"inventorySearchWithDistance API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="POST http://localhost:3000/api/inventorySearchWithDistance"',title:'"POST','http://localhost:3000/api/inventorySearchWithDistance"':!0},'{\n  "sku": 1019688,\n  "searchRadiusInKm": 500,\n  "userLocation": {\n    "latitude": 42.88023,\n    "longitude": -78.878738\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"inventorySearchWithDistance API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="inventorySearchWithDistance API Response"',title:'"inventorySearchWithDistance',API:!0,'Response"':!0},'{\n  "data": [\n    {\n      "storeId": "02_NY_ROCHESTER",\n      "storeLocation": {\n        "longitude": -77.608849,\n        "latitude": 43.156578\n      },\n      "sku": "1019688",\n      "quantity": "38",\n      "distInKm": "107.74513"\n    },\n    {\n      "storeId": "05_NY_WATERTOWN",\n      "storeLocation": {\n        "longitude": -75.910759,\n        "latitude": 43.974785\n      },\n      "sku": "1019688",\n      "quantity": "31",\n      "distInKm": "268.86249"\n    },\n    {\n      "storeId": "10_NY_POUGHKEEPSIE",\n      "storeLocation": {\n        "longitude": -73.923912,\n        "latitude": 41.70829\n      },\n      "sku": "1019688",\n      "quantity": "45",\n      "distInKm": "427.90787"\n    }\n  ],\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling an ",(0,r.kt)("inlineCode",{parentName:"p"},"inventorySearchWithDistance")," function which looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'},'/**\n * Search Product in stores within search radius, Also sort results by distance from current user location to store.\n *\n * :param _inventoryFilter: Product Id (sku), searchRadiusInKm and current userLocation\n * :return: Inventory product list\n */\nstatic async inventorySearchWithDistance(_inventoryFilter: IInventoryBodyFilter): Promise<IStoresInventory[]> {\n    const nodeRedisClient = getNodeRedisClient();\n\n    const repository = StoresInventoryRepo.getRepository();\n    let retItems: IStoresInventory[] = [];\n\n    if (nodeRedisClient && repository && _inventoryFilter?.sku\n        && _inventoryFilter?.userLocation?.latitude\n        && _inventoryFilter?.userLocation?.longitude) {\n\n        const lat = _inventoryFilter.userLocation.latitude;\n        const long = _inventoryFilter.userLocation.longitude;\n        const radiusInKm = _inventoryFilter.searchRadiusInKm || 1000;\n\n        const queryBuilder = repository.search()\n            .where(\'sku\')\n            .eq(_inventoryFilter.sku)\n            .and(\'quantity\')\n            .gt(0)\n            .and(\'storeLocation\')\n            .inRadius((circle) => {\n                return circle\n                    .latitude(lat)\n                    .longitude(long)\n                    .radius(radiusInKm)\n                    .kilometers\n            });\n\n        console.log(queryBuilder.query);\n        /* Sample queryBuilder query\n            ( ( (@sku:[1019688 1019688]) (@quantity:[(0 +inf]) ) (@storeLocation:[-78.878738 42.88023 500 km]) )\n        */\n\n        const indexName = `${StoresInventoryRepo.STORES_INVENTORY_KEY_PREFIX}:index`;\n        const aggregator = await nodeRedisClient.ft.aggregate(\n            indexName,\n            queryBuilder.query,\n            {\n                LOAD: ["@storeId", "@storeLocation", "@sku", "@quantity"],\n                STEPS: [{\n                    type: AggregateSteps.APPLY,\n                    expression: `geodistance(@storeLocation, ${long}, ${lat})/1000`,\n                    AS: \'distInKm\'\n                }, {\n                    type: AggregateSteps.SORTBY,\n                    BY: "@distInKm"\n                }]\n            });\n\n        /* Sample command to run query directly on CLI\n            FT.AGGREGATE StoresInventory:index \'( ( (@sku:[1019688 1019688]) (@quantity:[(0 +inf]) ) (@storeLocation:[-78.878738 42.88023 500 km]) )\' LOAD 4 @storeId @storeLocation @sku @quantity  APPLY "geodistance(@storeLocation,-78.878738,42.88043)/1000" AS distInKm SORTBY 1 @distInKm\n        */\n\n        retItems = <IStoresInventory[]>aggregator.results;\n\n        if (!retItems.length) {\n            throw `Product not found with in ${radiusInKm}km range!`;\n        }\n        else {\n            retItems = retItems.map((item) => {\n                if (typeof item.storeLocation == "string") {\n                    const location = item.storeLocation.split(",");\n                    item.storeLocation = {\n                        longitude: Number(location[0]),\n                        latitude: Number(location[1]),\n                    }\n                }\n                return item;\n            })\n        }\n    }\n    else {\n        throw `Input params failed !`;\n    }\n    return retItems;\n}\n')))}u.isMDXComponent=!0},61804:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const i={},a=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search",id:"howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search",title:"inventory-search",description:"The code that follows shows an example API request and response for the inventorySearch API:",source:"@site/docs/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search.mdx",sourceDirName:"howtos/solutions/real-time-inventory/local-inventory-search/api",slug:"/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search",permalink:"/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/local-inventory-search/api/inventory-search.mdx",tags:[],version:"current",lastUpdatedAt:1686097580,formattedLastUpdatedAt:"Jun 7, 2023",frontMatter:{}},l={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for the ",(0,r.kt)("inlineCode",{parentName:"p"},"inventorySearch")," API:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"inventorySearch API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="POST http://localhost:3000/api/inventorySearch"',title:'"POST','http://localhost:3000/api/inventorySearch"':!0},'{\n    "sku":1019688,\n    "searchRadiusInKm":500,\n    "userLocation": {\n        "latitude": 42.880230,\n        "longitude": -78.878738\n    }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"inventorySearch API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "storeId": "02_NY_ROCHESTER",\n      "storeLocation": {\n        "longitude": -77.608849,\n        "latitude": 43.156578\n      },\n      "sku": 1019688,\n      "quantity": 38\n    },\n    {\n      "storeId": "05_NY_WATERTOWN",\n      "storeLocation": {\n        "longitude": -75.910759,\n        "latitude": 43.974785\n      },\n      "sku": 1019688,\n      "quantity": 31\n    },\n    {\n      "storeId": "10_NY_POUGHKEEPSIE",\n      "storeLocation": {\n        "longitude": -73.923912,\n        "latitude": 41.70829\n      },\n      "sku": 1019688,\n      "quantity": 45\n    }\n  ],\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the ",(0,r.kt)("inlineCode",{parentName:"p"},"inventory service"),". Ultimately, it ends up calling an ",(0,r.kt)("inlineCode",{parentName:"p"},"inventorySearch")," function which looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'},"/**\n * Search Product in stores within search radius.\n *\n * :param _inventoryFilter: Product Id (sku), searchRadiusInKm and current userLocation\n * :return: Inventory product list\n */\nstatic async inventorySearch(_inventoryFilter: IInventoryBodyFilter): Promise<IStoresInventory[]> {\n    const nodeRedisClient = getNodeRedisClient();\n\n    const repository = StoresInventoryRepo.getRepository();\n    let retItems: IStoresInventory[] = [];\n\n    if (nodeRedisClient && repository && _inventoryFilter?.sku\n        && _inventoryFilter?.userLocation?.latitude\n        && _inventoryFilter?.userLocation?.longitude) {\n\n        const lat = _inventoryFilter.userLocation.latitude;\n        const long = _inventoryFilter.userLocation.longitude;\n        const radiusInKm = _inventoryFilter.searchRadiusInKm || 1000;\n\n        const queryBuilder = repository.search()\n            .where('sku')\n            .eq(_inventoryFilter.sku)\n            .and('quantity')\n            .gt(0)\n            .and('storeLocation')\n            .inRadius((circle) => {\n                return circle\n                    .latitude(lat)\n                    .longitude(long)\n                    .radius(radiusInKm)\n                    .kilometers\n            });\n\n        console.log(queryBuilder.query);\n        /* Sample queryBuilder query\n          ( ( (@sku:[1019688 1019688]) (@quantity:[(0 +inf]) ) (@storeLocation:[-78.878738 42.88023 500 km]) )\n        */\n\n        retItems = <IStoresInventory[]>await queryBuilder.return.all();\n\n        /* Sample command to run query directly on CLI\n          FT.SEARCH StoresInventory:index '( ( (@sku:[1019688 1019688]) (@quantity:[(0 +inf]) ) (@storeLocation:[-78.878738 42.88023 500 km]) )'\n        */\n\n\n        if (!retItems.length) {\n            throw `Product not found with in ${radiusInKm}km range!`;\n        }\n    }\n    else {\n        throw `Input params failed !`;\n    }\n    return retItems;\n}\n")))}u.isMDXComponent=!0},42828:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>h,default:()=>f,frontMatter:()=>p,metadata:()=>y,toc:()=>g});var o=n(87462),r=(n(67294),n(3905)),i=n(50358),a=n(61804),s=n(73264),l=n(44094),c=n(18392),d=n(96098),u=n(41514);const m=n.p+"assets/images/newyork-state-eb53b2ff5ced18de475a1b0de8004b12.png",p={id:"index-rti-local-inventory-search",title:"Real-time Local Inventory Search Using Redis",sidebar_label:"Real-time Local Inventory Search Using Redis",slug:"/howtos/solutions/real-time-inventory/local-inventory-search",authors:["prasan","will"]},h=void 0,y={unversionedId:"howtos/solutions/real-time-inventory/local-inventory-search/index-rti-local-inventory-search",id:"howtos/solutions/real-time-inventory/local-inventory-search/index-rti-local-inventory-search",title:"Real-time Local Inventory Search Using Redis",description:"What is real-time local inventory search?",source:"@site/docs/howtos/solutions/real-time-inventory/local-inventory-search/index-rti-local-inventory-search.mdx",sourceDirName:"howtos/solutions/real-time-inventory/local-inventory-search",slug:"/howtos/solutions/real-time-inventory/local-inventory-search",permalink:"/howtos/solutions/real-time-inventory/local-inventory-search",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/local-inventory-search/index-rti-local-inventory-search.mdx",tags:[],version:"current",lastUpdatedAt:1700152680,formattedLastUpdatedAt:"Nov 16, 2023",frontMatter:{id:"index-rti-local-inventory-search",title:"Real-time Local Inventory Search Using Redis",sidebar_label:"Real-time Local Inventory Search Using Redis",slug:"/howtos/solutions/real-time-inventory/local-inventory-search",authors:["prasan","will"]},sidebar:"docs",previous:{title:"Available to Promise in Real-time Inventory",permalink:"/howtos/solutions/real-time-inventory/available-to-promise"},next:{title:"Mobile Banking Authentication and Session Storage Using Redis",permalink:"/howtos/solutions/mobile-banking/session-management"}},v={},g=[{value:"What is real-time local inventory search?",id:"what-is-real-time-local-inventory-search",level:2},{value:"Current challenges in real time inventory",id:"current-challenges-in-real-time-inventory",level:2},{value:"Why you should use Redis for local inventory search",id:"why-you-should-use-redis-for-local-inventory-search",level:2},{value:"Real-time local inventory search with Redis",id:"real-time-local-inventory-search-with-redis",level:2},{value:"Building a real time local inventory search with redis",id:"building-a-real-time-local-inventory-search-with-redis",level:2},{value:"Setting up the data",id:"setting-up-the-data",level:3},{value:"InventorySearch API",id:"inventorysearch-api",level:3},{value:"InventorySearchWithDistance API",id:"inventorysearchwithdistance-api",level:3},{value:"Ready to use Redis for real-time local inventory search?",id:"ready-to-use-redis-for-real-time-local-inventory-search",level:2},{value:"Additional resources",id:"additional-resources",level:3}],k={toc:g};function f(e){let{components:t,...h}=e;return(0,r.kt)("wrapper",(0,o.Z)({},k,h,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{frontMatter:p,mdxType:"Authors"}),(0,r.kt)(l.default,{mdxType:"RealTimeInventorySourceCode"}),(0,r.kt)("h2",{id:"what-is-real-time-local-inventory-search"},"What is real-time local inventory search?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Real-time local inventory search")," is a method of utilizing advanced product search capabilities across a group of stores or warehouses in a region or geographic area by which a retailer can enhance the customer experience with a localized view of inventory while fulfilling orders from the closest store possible."),(0,r.kt)("p",null,"Geospatial search of merchandise local to the consumer helps sell stock faster, lowers inventory levels, and thus increases inventory turnover ratio.\nConsumers locate a product online, place the order in their browser or mobile device, and pick up at nearest store location. This is called \u201cbuy-online-pickup-in-store\u201d (BOPIS)"),(0,r.kt)("h2",{id:"current-challenges-in-real-time-inventory"},"Current challenges in real time inventory"),(0,r.kt)(c.default,{mdxType:"RealTimeInventoryChallenges"}),(0,r.kt)("h2",{id:"why-you-should-use-redis-for-local-inventory-search"},"Why you should use Redis for local inventory search"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Accurate location/regional inventory search"),": Redis Cloud geospatial search capabilities enable retailers to provide local inventories by store location across geographies and regions based on a consumer's location. This enables a real-time view of store inventory and and seamless BOPIS shopping experience.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Consistent and accurate inventory view across multichannel and omnichannel experiences"),": Accurate inventory information no matter what channel the shopper is using, in-store, kiosk, online, or mobile. Redis Cloud provides a single source of truth for inventory information across all channels.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Real-time search performance at scale"),": Redis Cloud real-time search and query engine allows retailers to provide instant application and inventory search responses and scale performance effortlessly during peak periods."))),(0,r.kt)("h2",{id:"real-time-local-inventory-search-with-redis"},"Real-time local inventory search with Redis"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"local-search",src:n(49749).Z,width:"1024",height:"520"})),(0,r.kt)("p",null,"Redis provides geospatial search capabilities across a group of stores or warehouses in a region or geographic area allowing a retailer to quickly show the available inventory local to the customer."),(0,r.kt)("p",null,"Redis Cloud processes event streams, keeping store inventories up-to-date in real-time. This enhances the customer experience with localized, accurate search of inventory while fulfilling orders from the nearest and fewest stores possible."),(0,r.kt)("p",null,"This solution lowers days sales of inventory (DSI), selling inventory faster and carrying less inventory for increased revenue generation and profits over a shorter time period."),(0,r.kt)("p",null,"It also reduces fulfillment costs to home and local stores enhancing a retailer's ability to fulfill orders with the lowest delivery and shipping costs."),(0,r.kt)("admonition",{title:"Customer proof points",type:"tip"},(0,r.kt)(d.default,{mdxType:"RealTimeInventoryCustomerProofs"})),(0,r.kt)("h2",{id:"building-a-real-time-local-inventory-search-with-redis"},"Building a real time local inventory search with redis"),(0,r.kt)(l.default,{mdxType:"RealTimeInventorySourceCode"}),(0,r.kt)("h3",{id:"setting-up-the-data"},"Setting up the data"),(0,r.kt)("p",null,"Once the application source code is downloaded, run following commands to populate data in Redis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# install packages\nnpm install\n\n# Seed data to Redis\nnpm run seed\n")),(0,r.kt)("p",null,"The demo uses two collections:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Product collection"),": Stores product details like ",(0,r.kt)("inlineCode",{parentName:"li"},"productId"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"name"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"price"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"image"),", and other details\n",(0,r.kt)("img",{alt:"product data",src:n(48867).Z,width:"2428",height:"742"}))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Download ",(0,r.kt)("u",null,(0,r.kt)("a",{parentName:"p",href:"https://redis.com/redis-enterprise/redis-insight/"},"RedisInsight"))," to view your Redis data or to play with raw Redis commands in the workbench.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"StoresInventory collection"),": Stores product quantity available at different local stores.")),(0,r.kt)("p",null,"For demo purpose, we are using the below regions in New York, US as store locations. Products are mapped to these location stores with a ",(0,r.kt)("inlineCode",{parentName:"p"},"storeId")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"quantity"),"."),(0,r.kt)("img",{src:m,alt:"Regions in NewYork State",width:"500",className:"margin-bottom--md"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"inventory data",src:n(33319).Z,width:"2456",height:"806"})),(0,r.kt)("p",null,"Let's build the following APIs to demonstrate geospatial search using Redis:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"InventorySearch API"),": Search Products in local stores within a search radius."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"InventorySearchWithDistance API"),": Search Product in local stores within search radius and sort results by distance from current user location to store.")),(0,r.kt)("h3",{id:"inventorysearch-api"},"InventorySearch API"),(0,r.kt)(a.default,{mdxType:"InventorySearch"}),(0,r.kt)("h3",{id:"inventorysearchwithdistance-api"},"InventorySearchWithDistance API"),(0,r.kt)(s.default,{mdxType:"InventorySearchWithDistance"}),(0,r.kt)("h2",{id:"ready-to-use-redis-for-real-time-local-inventory-search"},"Ready to use Redis for real-time local inventory search?"),(0,r.kt)("p",null,"Hopefully this tutorial has helped you visualize how to use Redis for real-time local inventory search across different regional stores. For additional resources related to this topic, check out the links below:"),(0,r.kt)("h3",{id:"additional-resources"},"Additional resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Real time inventory with Redis",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/howtos/solutions/real-time-inventory/available-to-promise"},"Available to Promise in Real-time Inventory")))),(0,r.kt)("li",{parentName:"ul"},"General",(0,r.kt)(u.default,{mdxType:"GeneralAdditionalResources"}))))}f.isMDXComponent=!0},33319:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/inventory-data-f91924e09806b30997c416cb2b7dbd1f.png"},49749:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/local-search-c564f7a224aac3231db77dbe77a6ff33.png"},48867:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/product-data-180c3a21007b18ec4ba394d385f7ea3a.png"}}]);