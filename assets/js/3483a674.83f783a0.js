"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[763,9993,247,8879,9074,7422,4931,5998,4479,1056,8562],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,v=p["".concat(l,".").concat(m)]||p[m]||c[m]||a;return n?o.createElement(v,i(i({ref:t},d),{},{components:n})):o.createElement(v,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},50358:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(67294),r=n(52263);const a="authorByline_VoxI",i="authorLabel_a70t",s="authorProfileImage_URwT";const l=function(e){let{frontMatter:t}=e;const{siteConfig:n}=(0,r.Z)(),l=n.customFields.authors;return o.createElement(o.Fragment,null,t.authors&&o.createElement("div",{className:"docAuthors"},o.createElement("hr",null),t.authors.map((e=>o.createElement("div",{key:e,className:a},o.createElement("img",{className:s,src:`/img/${l[e].image?l[e].image:"default_author_profile_pic.png"}`,alt:`Profile picture for ${l[e].name}`}),o.createElement("div",null,o.createElement("div",{className:i},"Author:"),o.createElement("div",null,o.createElement("a",{href:l[e].link,target:"_blank"},l[e].name),", ",l[e].title))))),o.createElement("hr",null)))}},62462:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/decrement-many-skus",id:"howtos/solutions/real-time-inventory/available-to-promise/api/decrement-many-skus",title:"decrement-many-skus",description:"The code that follows shows an example API request and response for decrementManySKUs activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-many-skus.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-many-skus",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-many-skus",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-many-skus.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for decrementManySKUs activity."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"decrementManySKUs API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'POST http://localhost:3000/api/decrementManySKUs\n[{\n    "sku":1019688,\n    "quantity":4\n},{\n    "sku":1003622,\n     "quantity":2\n},{\n    "sku":1006702,\n    "quantity":2\n}]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"decrementManySKUs API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "sku": 1019688,\n      "name": "5-Year Protection Plan - Geek Squad",\n      "type": "BlackTie",\n      "totalQuantity": 28 //previous value 32\n    },\n    {\n      "sku": 1003622,\n      "name": "Aquarius - Fender Stratocaster 1,000-Piece Jigsaw Puzzle - Black/Red/White/Yellow/Green/Orange/Blue",\n      "type": "HardGood",\n      "totalQuantity": 8 //previous value 10\n    },\n    {\n      "sku": 1006702,\n      "name": "Clash of the Titans [DVD] [2010]",\n      "type": "Movie",\n      "totalQuantity": 8 //previous value 10\n    }\n  ],\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,r.kt)("inlineCode",{parentName:"p"},"decrementManySKUs")," function which looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'}," static async decrementManySKUs(_productsFilter: IProductBodyFilter[]): Promise<IProduct[]> {\n        /**\n        decrement quantity  of specific Products.\n\n        :param _productWithIds: Product list with Id\n        :return: Product list\n        */\n        let retItems: IProduct[] = [];\n\n        if (_productsFilter && _productsFilter.length) {\n            //validation only\n            const promArr: Promise<boolean>[] = [];\n            for (let p of _productsFilter) {\n                if (p.sku) {\n                  //validating if all products in stock\n                    const promObj = InventoryServiceCls.validateQuantityOnDecrementSKU(p.sku, p.quantity);\n                    promArr.push(promObj)\n                }\n            }\n            await Promise.all(promArr);\n\n            //decrement only\n            const promArr2: Promise<IProduct>[] = [];\n            for (let p of _productsFilter) {\n                if (p.sku && p.quantity) {\n                    const isDecrement = true; //increments with negative value\n                    const isReturnProduct = false;\n                    const promObj2 = InventoryServiceCls.incrementSKU(p.sku, p.quantity, isDecrement, isReturnProduct);\n                    promArr2.push(promObj2)\n                }\n            }\n            await Promise.all(promArr2);\n\n\n            //retrieve updated products\n            retItems = await InventoryServiceCls.retrieveManySKUs(_productsFilter);\n        }\n        else {\n            throw `Input params failed !`;\n        }\n\n        return retItems;\n    }\n")))}c.isMDXComponent=!0},92388:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/decrement-sku",id:"howtos/solutions/real-time-inventory/available-to-promise/api/decrement-sku",title:"decrement-sku",description:"The code that follows shows an example API request and response for decrementSKU activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-sku.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-sku",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-sku",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/decrement-sku.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for decrementSKU activity."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"decrementSKU API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'POST http://localhost:3000/api/decrementSKU\n{\n    "sku":1019688,\n    "quantity":4\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"decrementSKU API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "sku": 1019688,\n    "name": "5-Year Protection Plan - Geek Squad",\n    "type": "BlackTie",\n    "totalQuantity": 16 //previous value 20\n  },\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,r.kt)("inlineCode",{parentName:"p"},"decrementSKU")," function which looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'},"static async decrementSKU(_productId: number, _decrQuantity: number): Promise<IProduct> {\n        /**\n        decrement quantity of a Product.\n\n        :param _productId: Product Id\n        :param _decrQuantity: new decrement quantity\n        :return: Product with Quantity\n        */\n        let retItem: IProduct = {};\n\n        //validating if product in stock\n        let isValid = await InventoryServiceCls.validateQuantityOnDecrementSKU(_productId, _decrQuantity);\n\n        if (isValid) {\n            const isDecrement = true; //increments with negative value\n            const isReturnProduct = true;\n            retItem = await InventoryServiceCls.incrementSKU(_productId, _decrQuantity, isDecrement, isReturnProduct);\n        }\n\n        return retItem;\n    }\n\n    static async validateQuantityOnDecrementSKU(_productId: number, _decrQuantity?: number): Promise<boolean> {\n        let isValid = false;\n\n        if (!_decrQuantity) {\n            _decrQuantity = 1;\n        }\n\n        if (_productId) {\n            const product = await InventoryServiceCls.retrieveSKU(_productId);\n            if (product && product.totalQuantity && product.totalQuantity > 0\n                && (product.totalQuantity - _decrQuantity >= 0)) {\n\n                isValid = true;\n            }\n            else {\n                throw `For product with Id ${_productId},  available quantity(${product.totalQuantity}) is lesser than decrement quantity(${_decrQuantity})`;\n            }\n\n        }\n        return isValid;\n    }\n")))}c.isMDXComponent=!0},56002:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/increment-sku",id:"howtos/solutions/real-time-inventory/available-to-promise/api/increment-sku",title:"increment-sku",description:"The code that follows shows an example API request and response for incrementSKU activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/increment-sku.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/increment-sku",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/increment-sku",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/increment-sku.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for incrementSKU activity."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"incrementSKU API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'POST http://localhost:3000/api/incrementSKU\n{\n    "sku":1019688,\n    "quantity":2\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"incrementSKU API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "sku": 1019688,\n    "name": "5-Year Protection Plan - Geek Squad",\n    "type": "BlackTie",\n    "totalQuantity": 12 //previous value 10\n  },\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,r.kt)("inlineCode",{parentName:"p"},"incrementSKU")," function which looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'},"static async incrementSKU(_productId: number, _incrQuantity: number, _isDecrement: boolean, _isReturnProduct: boolean): Promise<IProduct> {\n        /**\n        increment quantity of a Product.\n\n        :param _productId: Product Id\n        :param _incrQuantity: new increment quantity\n        :return: Product with Quantity\n        */\n\n        const redisOmClient = getRedisOmClient();\n        let retItem: IProduct = {};\n\n        if (!_incrQuantity) {\n            _incrQuantity = 1;\n        }\n        if (_isDecrement) {\n            _incrQuantity = _incrQuantity * -1;\n        }\n        if (redisOmClient && _productId && _incrQuantity) {\n\n            const updateKey = `${ProductRepo.PRODUCT_KEY_PREFIX}:${_productId}`;\n\n            //increment json number field by specific (positive/ negative) value\n            await redisOmClient.redis?.json.numIncrBy(updateKey, '$.totalQuantity', _incrQuantity);\n\n            if (_isReturnProduct) {\n                retItem = await InventoryServiceCls.retrieveSKU(_productId);\n            }\n\n        }\n        else {\n            throw `Input params failed !`;\n        }\n\n        return retItem;\n    }\n")))}c.isMDXComponent=!0},99453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-many-skus",id:"howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-many-skus",title:"retrieve-many-skus",description:"The code that follows shows an example API request and response for retrieveManySKUs activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-many-skus.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-many-skus",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-many-skus",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-many-skus.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for retrieveManySKUs activity."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"retrieveManySKUs API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'POST http://localhost:3000/api/retrieveManySKUs\n[{\n    "sku":1019688\n},{\n    "sku":1003622\n},{\n    "sku":1006702\n}]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"retrieveManySKUs API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "sku": 1019688,\n      "name": "5-Year Protection Plan - Geek Squad",\n      "type": "BlackTie",\n      "totalQuantity": 24\n    },\n    {\n      "sku": 1003622,\n      "name": "Aquarius - Fender Stratocaster 1,000-Piece Jigsaw Puzzle - Black/Red/White/Yellow/Green/Orange/Blue",\n      "type": "HardGood",\n      "totalQuantity": 10\n    },\n    {\n      "sku": 1006702,\n      "name": "Clash of the Titans [DVD] [2010]",\n      "type": "Movie",\n      "totalQuantity": 10\n    }\n  ],\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,r.kt)("inlineCode",{parentName:"p"},"retrieveManySKUs")," function which looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'},'static async retrieveManySKUs(_productWithIds: IProductBodyFilter[]): Promise<IProduct[]> {\n        /**\n        Get current Quantity of specific Products.\n\n        :param _productWithIds: Product list with Id\n        :return: Product list\n        */\n        const repository = ProductRepo.getRepository();\n        let retItems: IProduct[] = [];\n\n        if (repository && _productWithIds && _productWithIds.length) {\n\n            //string id array\n            const idArr = _productWithIds.map((product) => {\n                return product.sku?.toString() || ""\n            });\n\n           //fetch products by IDs (using redis om library)\n            const result = await repository.fetch(...idArr);\n\n            let productsArr: IProduct[] = [];\n\n            if (idArr.length == 1) {\n                productsArr = [<IProduct>result];\n            }\n            else {\n                productsArr = <IProduct[]>result;\n            }\n\n            if (productsArr && productsArr.length) {\n\n                retItems = productsArr.map((product) => {\n                    return {\n                        sku: product.sku,\n                        name: product.name,\n                        type: product.type,\n                        totalQuantity: product.totalQuantity\n                    }\n                });\n            }\n            else {\n                throw `No products found !`;\n            }\n        }\n        else {\n            throw `Input params failed !`;\n        }\n\n        return retItems;\n    }\n')))}c.isMDXComponent=!0},87315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",id:"howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",title:"retrieve-sku",description:"The code that follows shows an example API request and response for retrieveSKU activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for retrieveSKU activity."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"retrieveSKU API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"GET http://localhost:3000/api/retrieveSKU?sku=1019688\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"retrieveSKU API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "sku": 1019688,\n    "name": "5-Year Protection Plan - Geek Squad",\n    "type": "BlackTie",\n    "totalQuantity": 10\n  },\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,r.kt)("inlineCode",{parentName:"p"},"retrieveSKU")," function which looks as follows:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"code")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'},"\nstatic async retrieveSKU(_productId: number): Promise<IProduct> {\n    /**\n    Get current Quantity of a Product.\n\n    :param _productId: Product Id\n    :return: Product with Quantity\n    */\n    const repository = ProductRepo.getRepository();\n    let retItem: IProduct = {};\n\n    if (repository && _productId) {\n        //fetch product by ID (using redis om library)\n        const product = <IProduct>await repository.fetch(_productId.toString());\n\n        if (product) {\n            retItem = {\n                sku: product.sku,\n                name: product.name,\n                type: product.type,\n                totalQuantity: product.totalQuantity\n            }\n        }\n        else {\n            throw `Product with Id ${_productId} not found`;\n        }\n    }\n    else {\n        throw `Input params failed !`;\n    }\n\n    return retItem;\n}\n\n")))}c.isMDXComponent=!0},82349:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",id:"howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",title:"update-sku",description:"The code that follows shows an example API request and response for updateSKU activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The code that follows shows an example API request and response for updateSKU activity."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"updateSKU API Request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'POST http://localhost:3000/api/updateSKU\n{\n    "sku":1019688,\n    "quantity":25\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"updateSKU API Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "sku": 1019688,\n    "name": "5-Year Protection Plan - Geek Squad",\n    "type": "BlackTie",\n    "totalQuantity": 25 //updated value\n  },\n  "error": null\n}\n')),(0,r.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,r.kt)("inlineCode",{parentName:"p"},"updateSKU")," function which looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'}," static async updateSKU(_productId: number, _quantity: number): Promise<IProduct> {\n        /**\n        Set Quantity of a Product.\n\n        :param _productId: Product Id\n        :param _quantity: new quantity\n        :return: Product with Quantity\n        */\n        const repository = ProductRepo.getRepository();\n        let retItem: IProduct = {};\n\n        if (repository && _productId && _quantity >= 0) {\n            //fetch product by ID (using redis om library)\n            const product = <IProduct>await repository.fetch(_productId.toString());\n\n            if (product) {\n                //update the product fields\n                product.totalQuantity = _quantity;\n\n                // save the modified product\n                const savedItem = <IProduct>await repository.save(<RedisEntity>product);\n\n                retItem = {\n                    sku: savedItem.sku,\n                    name: savedItem.name,\n                    type: savedItem.type,\n                    totalQuantity: savedItem.totalQuantity\n                }\n            }\n            else {\n                throw `Product with Id ${_productId} not found`;\n            }\n        }\n        else {\n            throw `Input params failed !`;\n        }\n\n        return retItem;\n    }\n")))}c.isMDXComponent=!0},1337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>k,default:()=>I,frontMatter:()=>h,metadata:()=>f,toc:()=>w});var o=n(87462),r=(n(67294),n(3905)),a=n(50358),i=n(87315),s=n(82349),l=n(56002),u=n(92388),d=n(99453),c=n(62462),p=n(44094),m=n(18392),v=n(96098),y=n(41514);const h={id:"index-rti-available-to-promise",title:"Available to Promise in Real-time Inventory Using Redis",sidebar_label:"Available to Promise in Real-time Inventory",slug:"/howtos/solutions/real-time-inventory/available-to-promise",authors:["prasan","will"]},k=void 0,f={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/index-rti-available-to-promise",id:"howtos/solutions/real-time-inventory/available-to-promise/index-rti-available-to-promise",title:"Available to Promise in Real-time Inventory Using Redis",description:"What is available-to-promise (ATP)?",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/index-rti-available-to-promise.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise",slug:"/howtos/solutions/real-time-inventory/available-to-promise",permalink:"/howtos/solutions/real-time-inventory/available-to-promise",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/index-rti-available-to-promise.mdx",tags:[],version:"current",lastUpdatedAt:1700152680,formattedLastUpdatedAt:"Nov 16, 2023",frontMatter:{id:"index-rti-available-to-promise",title:"Available to Promise in Real-time Inventory Using Redis",sidebar_label:"Available to Promise in Real-time Inventory",slug:"/howtos/solutions/real-time-inventory/available-to-promise",authors:["prasan","will"]},sidebar:"docs",previous:{title:"How to use Redis for Query Caching",permalink:"/howtos/solutions/microservices/caching"},next:{title:"Real-time Local Inventory Search Using Redis",permalink:"/howtos/solutions/real-time-inventory/local-inventory-search"}},g={},w=[{value:"What is available-to-promise (ATP)?",id:"what-is-available-to-promise-atp",level:2},{value:"How to calculate available-to-promise",id:"how-to-calculate-available-to-promise",level:3},{value:"Current challenges in real time inventory",id:"current-challenges-in-real-time-inventory",level:2},{value:"Why you should use Redis for available-to-promise",id:"why-you-should-use-redis-for-available-to-promise",level:2},{value:"Real time inventory with Redis",id:"real-time-inventory-with-redis",level:2},{value:"Customer proof points",id:"customer-proof-points",level:3},{value:"Building a real time inventory service with redis",id:"building-a-real-time-inventory-service-with-redis",level:2},{value:"RetrieveSKU",id:"retrievesku",level:3},{value:"UpdateSKU",id:"updatesku",level:3},{value:"IncrementSKU",id:"incrementsku",level:3},{value:"DecrementSKU",id:"decrementsku",level:3},{value:"RetrieveManySKUs",id:"retrievemanyskus",level:3},{value:"DecrementManySKUs",id:"decrementmanyskus",level:3},{value:"Ready to use Redis in a Real time inventory system?",id:"ready-to-use-redis-in-a-real-time-inventory-system",level:2},{value:"Additional resources",id:"additional-resources",level:3}],b={toc:w};function I(e){let{components:t,...k}=e;return(0,r.kt)("wrapper",(0,o.Z)({},b,k,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(a.Z,{frontMatter:h,mdxType:"Authors"}),(0,r.kt)(p.default,{mdxType:"RealTimeInventorySourceCode"}),(0,r.kt)("h2",{id:"what-is-available-to-promise-atp"},"What is available-to-promise (ATP)?"),(0,r.kt)("p",null,"The major requirement in a ",(0,r.kt)("strong",{parentName:"p"},"retail inventory system")," is presenting an accurate, real-time view of inventory to shoppers and store associates enabling buy-online-pickup-in-store (BOPIS). Optimizing fulfillment from multiple inventory locations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Available to promise (ATP)")," is the projected amount of inventory left available to sell, not including allocated inventory. It allows businesses to control distribution to their customers and predict inventory. The ATP model helps retailers keep inventory costs down such as ordering costs, carrying costs and stock-out costs. ATP is helpful as long as consumer buying forecasts remain correct. Implementing ATP processes effectively for retailers can mean the difference between sustained growth and an inventory that repeatedly runs out of customer's favorite products missing sales opportunities and harming customer experience."),(0,r.kt)("h3",{id:"how-to-calculate-available-to-promise"},"How to calculate available-to-promise"),(0,r.kt)("p",null,"Calculating available-to-promise is a relatively simple undertaking. Complete the following formula for an accurate breakdown of available-to-promise capabilities:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Available-to-promise = QuantityOnHand + Supply - Demand\n")),(0,r.kt)("p",null,"This formula includes the following elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"QuantityOnHand: the total number of products that are immediately available to a company"),(0,r.kt)("li",{parentName:"ul"},"Supply: the total stock of a product available for sale"),(0,r.kt)("li",{parentName:"ul"},"Demand: the amount of a specific product that consumers are willing to purchase")),(0,r.kt)("h2",{id:"current-challenges-in-real-time-inventory"},"Current challenges in real time inventory"),(0,r.kt)(m.default,{mdxType:"RealTimeInventoryChallenges"}),(0,r.kt)("h2",{id:"why-you-should-use-redis-for-available-to-promise"},"Why you should use Redis for available-to-promise"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Increased inventory visibility"),": Redis Cloud provides highly scalable, real-time inventory synchronization between stores providing views into what stock is Available-To-Promise. Customers want to buy from a retailer who can check stock across multiple locations and provide real-time views on what's available locally.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Enhanced customer experience"),": Sub-millisecond latency means online customers can easily get real-time views of shopping carts, pricing, and in stock availability. Redis Cloud built-in search engine delivers full text and aggregated faceted search of inventory in real time, scaling performance to instantly search inventories with millions of product types helping customers fill their shopping carts faster, keeping them engaged and loyal.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Cost efficiency at scale"),": Redis Cloud offers real-time, bi-directional consistency between stores and data integration capabilities with enterprise systems without the complexity and costs of managing message brokers, auditing, and reconciliation."))),(0,r.kt)("h2",{id:"real-time-inventory-with-redis"},"Real time inventory with Redis"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"atp",src:n(37486).Z,width:"1624",height:"1100"})),(0,r.kt)("p",null,"Using Redis, System delivers real-time synchronization of inventory across stores, in transit and warehouses. Provide retailers the most accurate, timely data on inventory across their entire store network and consumers positive customer experiences searching and locating inventory."),(0,r.kt)("p",null,"Redis Data Integration (RDI) capabilities enable accurate real-time inventory management and system of record synchronization. Redis advanced inventory search and query capabilities provide accurate available inventory information to multichannel and omnichannel customers and store associates."),(0,r.kt)("p",null,"This solution increases inventory turnover ratios resulting in lower inventory costs, higher revenue and profits. It also reduces the impact of customer searches on Systems of Record and Inventory Management Systems (IMS)."),(0,r.kt)("h3",{id:"customer-proof-points"},"Customer proof points"),(0,r.kt)(v.default,{mdxType:"RealTimeInventoryCustomerProofs"}),(0,r.kt)("h2",{id:"building-a-real-time-inventory-service-with-redis"},"Building a real time inventory service with redis"),(0,r.kt)(p.default,{mdxType:"RealTimeInventorySourceCode"}),(0,r.kt)("p",null,"Managing inventory or a ",(0,r.kt)("strong",{parentName:"p"},"SKU (stock keeping unit)")," process contains some activities like :"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"RetrieveSKU : Fetch the current quantity of a product"),(0,r.kt)("li",{parentName:"ol"},"UpdateSKU : Update the latest quantity of a product"),(0,r.kt)("li",{parentName:"ol"},"IncrementSKU : Increment the quantity by a specific value (Say, when more products are procured)"),(0,r.kt)("li",{parentName:"ol"},"DecrementSKU : Decrement the quantity by a specific value (Say, after order fulfillment of the product)"),(0,r.kt)("li",{parentName:"ol"},"RetrieveManySKUs : Fetch the current quantity of ",(0,r.kt)("strong",{parentName:"li"},"multiple")," products (Say, to verify products in stock before payment)"),(0,r.kt)("li",{parentName:"ol"},"DecrementManySKUs: Decrement the quantity of ",(0,r.kt)("strong",{parentName:"li"},"multiple")," products (Say, after an order fulfillment with multiple products)")),(0,r.kt)("h3",{id:"retrievesku"},"RetrieveSKU"),(0,r.kt)(i.default,{mdxType:"RetrieveSKU"}),(0,r.kt)("h3",{id:"updatesku"},"UpdateSKU"),(0,r.kt)(s.default,{mdxType:"UpdateSKU"}),(0,r.kt)("h3",{id:"incrementsku"},"IncrementSKU"),(0,r.kt)(l.default,{mdxType:"IncrementSKU"}),(0,r.kt)("h3",{id:"decrementsku"},"DecrementSKU"),(0,r.kt)(u.default,{mdxType:"DecrementSKU"}),(0,r.kt)("h3",{id:"retrievemanyskus"},"RetrieveManySKUs"),(0,r.kt)(d.default,{mdxType:"RetrieveManySKUs"}),(0,r.kt)("h3",{id:"decrementmanyskus"},"DecrementManySKUs"),(0,r.kt)(c.default,{mdxType:"DecrementManySKUs"}),(0,r.kt)("h2",{id:"ready-to-use-redis-in-a-real-time-inventory-system"},"Ready to use Redis in a Real time inventory system?"),(0,r.kt)("p",null,"Hopefully, this tutorial has helped you visualize how to use Redis in a Real time inventory system for product availability across different location stores. For additional resources related to this topic, check out the links below:"),(0,r.kt)("h3",{id:"additional-resources"},"Additional resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Real time inventory with Redis",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/howtos/solutions/real-time-inventory/local-inventory-search"},"Real time Local Inventory Search")))),(0,r.kt)("li",{parentName:"ul"},"General",(0,r.kt)(y.default,{mdxType:"GeneralAdditionalResources"}))))}I.isMDXComponent=!0},41514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/additional-resources",id:"howtos/solutions/real-time-inventory/common-rti/additional-resources",title:"additional-resources",description:"- Redis YouTube channel",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/additional-resources.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/additional-resources",permalink:"/howtos/solutions/real-time-inventory/common-rti/additional-resources",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/additional-resources.mdx",tags:[],version:"current",lastUpdatedAt:1700152680,formattedLastUpdatedAt:"Nov 16, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/c/Redisinc"},"Redis YouTube channel")),(0,r.kt)("li",{parentName:"ul"},"Clients like ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/redis/node-redis"},"Node Redis")," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/redis/redis-om-node"},"Redis om Node")," help you to use Redis in Node.js applications."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://redis.com/redis-enterprise/redis-insight/"},"RedisInsight")," : To view your Redis data or to play with raw Redis commands in the workbench"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://redis.com/try-free/"},"Try Redis Cloud for free"))))}c.isMDXComponent=!0},96098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/customer-proofs",id:"howtos/solutions/real-time-inventory/common-rti/customer-proofs",title:"customer-proofs",description:"- Redis Cloud on Google Cloud Platform enables Ulta Beauty to build a \u201cdigital store of the future\u201d",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/customer-proofs.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/customer-proofs",permalink:"/howtos/solutions/real-time-inventory/common-rti/customer-proofs",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/customer-proofs.mdx",tags:[],version:"current",lastUpdatedAt:1700152680,formattedLastUpdatedAt:"Nov 16, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Redis Cloud on Google Cloud Platform enables ",(0,r.kt)("a",{parentName:"li",href:"https://redis.com/customers/ulta-beauty/"},(0,r.kt)("u",null,(0,r.kt)("strong",{parentName:"a"},"Ulta Beauty to build a \u201cdigital store of the future\u201d"))))))}c.isMDXComponent=!0},18392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/rti-challenges",id:"howtos/solutions/real-time-inventory/common-rti/rti-challenges",title:"rti-challenges",description:"- Over and under-stocking: While adopting a multi-channel business model (online & in store), lack of inventory visibility results in over and under-stocking of inventory in different regions and stores.",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/rti-challenges.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/rti-challenges",permalink:"/howtos/solutions/real-time-inventory/common-rti/rti-challenges",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/rti-challenges.mdx",tags:[],version:"current",lastUpdatedAt:1686097580,formattedLastUpdatedAt:"Jun 7, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Over and under-stocking"),": While adopting a multi-channel business model (online & in store), lack of inventory visibility results in over and under-stocking of inventory in different regions and stores.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Consumers ",(0,r.kt)("strong",{parentName:"p"},"seek convenience"),": The ability to search across regional store locations and pickup merchandise ",(0,r.kt)("strong",{parentName:"p"},"immediately")," rather than wait for shipping is a key differentiator for retailers.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Consumers ",(0,r.kt)("strong",{parentName:"p"},"seek speed"),": All retailers, even small or family-run, must compete against the ",(0,r.kt)("strong",{parentName:"p"},"customer experience")," of large online retailers like Alibaba, FlipKart, Shopee, and Amazon.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"High inventory costs"),": Retailers seek to lower inventory costs by eliminating missed sales from out-of-stock scenarios which also leads to higher \u201cinventory turnover ratios.\u201d")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Brand value"),": Inaccurate store inventory counts lead to frustrated customers and lower sales. The operational pain will ",(0,r.kt)("strong",{parentName:"p"},"impact the status quo"),"."))))}c.isMDXComponent=!0},44094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/common-rti/source-code-tip",id:"howtos/solutions/real-time-inventory/common-rti/source-code-tip",title:"source-code-tip",description:"Below is a command to the clone the source code for the application used in this tutorial",source:"@site/docs/howtos/solutions/real-time-inventory/common-rti/source-code-tip.mdx",sourceDirName:"howtos/solutions/real-time-inventory/common-rti",slug:"/howtos/solutions/real-time-inventory/common-rti/source-code-tip",permalink:"/howtos/solutions/real-time-inventory/common-rti/source-code-tip",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/common-rti/source-code-tip.mdx",tags:[],version:"current",lastUpdatedAt:1684866843,formattedLastUpdatedAt:"May 23, 2023",frontMatter:{}},l={},u=[],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"GITHUB CODE",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Below is a command to the clone the source code for the application used in this tutorial"),(0,r.kt)("p",{parentName:"admonition"},"git clone ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redis-developer/redis-real-time-inventory-solutions"},"https://github.com/redis-developer/redis-real-time-inventory-solutions"))))}c.isMDXComponent=!0},37486:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/atp2-2f40c9e2c9a26200b4ad614577359c12.png"}}]);