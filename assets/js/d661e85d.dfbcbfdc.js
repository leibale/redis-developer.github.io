"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[342,3901,1966,2124],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),p=d(n),u=s,g=p["".concat(l,".").concat(u)]||p[u]||m[u]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,i=new Array(o);i[0]=p;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:s,i[1]=r;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},50358:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),s=n(52263);const o="authorByline_VoxI",i="authorLabel_a70t",r="authorProfileImage_URwT";const l=function(e){let{frontMatter:t}=e;const{siteConfig:n}=(0,s.Z)(),l=n.customFields.authors;return a.createElement(a.Fragment,null,t.authors&&a.createElement("div",{className:"docAuthors"},a.createElement("hr",null),t.authors.map((e=>a.createElement("div",{key:e,className:o},a.createElement("img",{className:r,src:`/img/${l[e].image?l[e].image:"default_author_profile_pic.png"}`,alt:`Profile picture for ${l[e].name}`}),a.createElement("div",null,a.createElement("div",{className:i},"Author:"),a.createElement("div",null,a.createElement("a",{href:l[e].link,target:"_blank"},l[e].name),", ",l[e].title))))),a.createElement("hr",null)))}},92148:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=n(87462),s=(n(67294),n(3905));const o={},i=void 0,r={unversionedId:"howtos/solutions/mobile-banking/common-mb/additional-resources",id:"howtos/solutions/mobile-banking/common-mb/additional-resources",title:"additional-resources",description:"- Redis YouTube channel",source:"@site/docs/howtos/solutions/mobile-banking/common-mb/additional-resources.mdx",sourceDirName:"howtos/solutions/mobile-banking/common-mb",slug:"/howtos/solutions/mobile-banking/common-mb/additional-resources",permalink:"/howtos/solutions/mobile-banking/common-mb/additional-resources",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/mobile-banking/common-mb/additional-resources.mdx",tags:[],version:"current",lastUpdatedAt:1700152680,formattedLastUpdatedAt:"Nov 16, 2023",frontMatter:{}},l={},d=[],c={toc:d};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.youtube.com/c/Redisinc"},"Redis YouTube channel")),(0,s.kt)("li",{parentName:"ul"},"Clients like ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/redis/node-redis"},"Node Redis")," and ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/redis/redis-om-node"},"Redis OM Node")," help you to use Redis in Node.js applications."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://redis.com/redis-enterprise/redis-insight/"},"RedisInsight"),": To view your Redis data or to play with raw Redis commands in the workbench"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://redis.com/try-free/"},"Try Redis Cloud for free"))))}m.isMDXComponent=!0},80880:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=n(87462),s=(n(67294),n(3905));const o={},i=void 0,r={unversionedId:"howtos/solutions/mobile-banking/common-mb/data-seeding",id:"howtos/solutions/mobile-banking/common-mb/data-seeding",title:"data-seeding",description:"This application leverages Redis core data structures, JSON, TimeSeries, Search and Query features. The data seeded is later used to show a searchable transaction overview with realtime updates as well as a personal finance management overview with realtime balance and biggest spenders updates.",source:"@site/docs/howtos/solutions/mobile-banking/common-mb/data-seeding.mdx",sourceDirName:"howtos/solutions/mobile-banking/common-mb",slug:"/howtos/solutions/mobile-banking/common-mb/data-seeding",permalink:"/howtos/solutions/mobile-banking/common-mb/data-seeding",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/mobile-banking/common-mb/data-seeding.mdx",tags:[],version:"current",lastUpdatedAt:1698353241,formattedLastUpdatedAt:"Oct 26, 2023",frontMatter:{}},l={},d=[],c={toc:d};function m(e){let{components:t,...o}=e;return(0,s.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This application leverages ",(0,s.kt)("strong",{parentName:"p"},"Redis core data structures, JSON, TimeSeries, Search and Query features"),". The data seeded is later used to show a searchable transaction overview with realtime updates as well as a personal finance management overview with realtime balance and biggest spenders updates."),(0,s.kt)("p",null,"On application startup in ",(0,s.kt)("inlineCode",{parentName:"p"},"app/server.js"),", a cron is scheduled to create random bank transactions at regular intervals and seed those transactions in to Redis."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="app/server.js"',title:'"app/server.js"'},"//cron job to trigger createBankTransaction() at regular intervals\n\ncron.schedule('*/10 * * * * *', async () => {\n  const userName = process.env.REDIS_USERNAME;\n\n  createBankTransaction(userName);\n\n  //...\n});\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The transaction generator creates a randomized banking debit or credit which will reflect on a (default) starting user balance of $100,000.00"),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("strong",{parentName:"li"},"transaction data")," is saved as a JSON document within Redis."),(0,s.kt)("li",{parentName:"ul"},"To capture ",(0,s.kt)("strong",{parentName:"li"},"balance over time"),", the ",(0,s.kt)("inlineCode",{parentName:"li"},"balanceAfter")," value is recorded in a TimeSeries with the key ",(0,s.kt)("inlineCode",{parentName:"li"},"balance_ts")," for every transaction."),(0,s.kt)("li",{parentName:"ul"},"To track ",(0,s.kt)("strong",{parentName:"li"},"biggest spenders"),", an associated ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"fromAccountName"))," member within the sorted set ",(0,s.kt)("inlineCode",{parentName:"li"},"bigspenders")," is incremented by the transaction amount. Note that this amount can be positive or negative.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="app/transactions/transactionsGenerator.js"',title:'"app/transactions/transactionsGenerator.js"'},"let balance = 100000.0;\nconst BALANCE_TS = 'balance_ts';\nconst SORTED_SET_KEY = 'bigspenders';\n\nexport const createBankTransaction = async () => {\n  //to create random bank transaction\n  let vendorsList = source.source; //app/transactions/transaction_sources.js\n  const random = Math.floor(Math.random() * 9999999999);\n\n  const vendor = vendorsList[random % vendorsList.length]; //random vendor from the list\n\n  const amount = createTransactionAmount(vendor.fromAccountName, random);\n  const transaction = {\n    id: random * random,\n    fromAccount: Math.floor((random / 2) * 3).toString(),\n    fromAccountName: vendor.fromAccountName,\n    toAccount: '1580783161',\n    toAccountName: 'bob',\n    amount: amount,\n    description: vendor.description,\n    transactionDate: new Date(),\n    transactionType: vendor.type,\n    balanceAfter: balance,\n  };\n\n  //redis json feature\n  const bankTransaction = await bankTransactionRepository.save(transaction);\n  console.log('Created bankTransaction!');\n  // ...\n};\n\nconst createTransactionAmount = (vendor, random) => {\n  let amount = createAmount(); //random amount\n  balance += amount;\n  balance = parseFloat(balance.toFixed(2));\n\n  //redis time series feature\n  redis.ts.add(BALANCE_TS, '*', balance, { DUPLICATE_POLICY: 'first' });\n  //redis sorted set as secondary index\n  redis.zIncrBy(SORTED_SET_KEY, amount * -1, vendor);\n\n  return amount;\n};\n")),(0,s.kt)("p",null,"Sample ",(0,s.kt)("inlineCode",{parentName:"p"},"bankTransaction")," data view using ",(0,s.kt)("a",{parentName:"p",href:"https://redis.com/redis-enterprise/redis-insight/"},"RedisInsight")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"bank transaction data",src:n(65089).Z,width:"900",height:"355"})),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"bank transaction json",src:n(91622).Z,width:"1336",height:"858"})),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"Download ",(0,s.kt)("a",{parentName:"p",href:"https://redis.com/redis-enterprise/redis-insight/"},(0,s.kt)("u",null,(0,s.kt)("strong",{parentName:"a"},"RedisInsight")))," to view your Redis data or to play with raw Redis commands in the workbench.")))}m.isMDXComponent=!0},56391:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=n(87462),s=(n(67294),n(3905));const o={},i=void 0,r={unversionedId:"howtos/solutions/mobile-banking/common-mb/source-code-tip",id:"howtos/solutions/mobile-banking/common-mb/source-code-tip",title:"source-code-tip",description:"Below is a command to the clone the source code for the application used in this tutorial",source:"@site/docs/howtos/solutions/mobile-banking/common-mb/source-code-tip.mdx",sourceDirName:"howtos/solutions/mobile-banking/common-mb",slug:"/howtos/solutions/mobile-banking/common-mb/source-code-tip",permalink:"/howtos/solutions/mobile-banking/common-mb/source-code-tip",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/mobile-banking/common-mb/source-code-tip.mdx",tags:[],version:"current",lastUpdatedAt:1687456395,formattedLastUpdatedAt:"Jun 22, 2023",frontMatter:{}},l={},d=[],c={toc:d};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{title:"GITHUB CODE",type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"Below is a command to the clone the source code for the application used in this tutorial"),(0,s.kt)("p",{parentName:"admonition"},"git clone --branch v1.2.0 ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/redis-developer/mobile-banking-solutions"},"https://github.com/redis-developer/mobile-banking-solutions"))))}m.isMDXComponent=!0},3738:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>m,default:()=>b,frontMatter:()=>c,metadata:()=>p,toc:()=>g});var a=n(87462),s=(n(67294),n(3905)),o=n(50358),i=n(92148),r=n(56391),l=n(80880);const d=n.p+"assets/images/demo-dashboard-balance-widget-af7fdd4437974dffe83689bfc4b840c7.png",c={id:"index-mb-session-management",title:"Mobile Banking Authentication and Session Storage Using Redis",sidebar_label:"Mobile Banking Authentication and Session Storage Using Redis",slug:"/howtos/solutions/mobile-banking/session-management",authors:["prasan","will"]},m=void 0,p={unversionedId:"howtos/solutions/mobile-banking/session-management/index-mb-session-management",id:"howtos/solutions/mobile-banking/session-management/index-mb-session-management",title:"Mobile Banking Authentication and Session Storage Using Redis",description:"What is authentication and session storage for mobile banking?",source:"@site/docs/howtos/solutions/mobile-banking/session-management/index-session-management.mdx",sourceDirName:"howtos/solutions/mobile-banking/session-management",slug:"/howtos/solutions/mobile-banking/session-management",permalink:"/howtos/solutions/mobile-banking/session-management",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/mobile-banking/session-management/index-session-management.mdx",tags:[],version:"current",lastUpdatedAt:1702551239,formattedLastUpdatedAt:"Dec 14, 2023",frontMatter:{id:"index-mb-session-management",title:"Mobile Banking Authentication and Session Storage Using Redis",sidebar_label:"Mobile Banking Authentication and Session Storage Using Redis",slug:"/howtos/solutions/mobile-banking/session-management",authors:["prasan","will"]},sidebar:"docs",previous:{title:"Real-time Local Inventory Search Using Redis",permalink:"/howtos/solutions/real-time-inventory/local-inventory-search"},next:{title:"Mobile Banking Account Dashboard Using Redis",permalink:"/howtos/solutions/mobile-banking/account-dashboard"}},u={},g=[{value:"What is authentication and session storage for mobile banking?",id:"what-is-authentication-and-session-storage-for-mobile-banking",level:2},{value:"Why you should use Redis for mobile banking session management?",id:"why-you-should-use-redis-for-mobile-banking-session-management",level:2},{value:"Building session management with Redis",id:"building-session-management-with-redis",level:2},{value:"Data seeding",id:"data-seeding",level:3},{value:"Session configuration",id:"session-configuration",level:3},{value:"Login API (Session id generation)",id:"login-api-session-id-generation",level:3},{value:"Balance API (Session storage)",id:"balance-api-session-storage",level:3},{value:"Ready to use Redis in session management?",id:"ready-to-use-redis-in-session-management",level:2},{value:"Additional resources",id:"additional-resources",level:3}],h={toc:g};function b(e){let{components:t,...m}=e;return(0,s.kt)("wrapper",(0,a.Z)({},h,m,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(o.Z,{frontMatter:c,mdxType:"Authors"}),(0,s.kt)(r.default,{mdxType:"MobileBankingSourceCode"}),(0,s.kt)("h2",{id:"what-is-authentication-and-session-storage-for-mobile-banking"},"What is authentication and session storage for mobile banking?"),(0,s.kt)("p",null,"After a user has successfully entered their login credentials, mobile banking apps use a ",(0,s.kt)("inlineCode",{parentName:"p"},"token")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"sessionId")," created by the server to represent a user's identity. The ",(0,s.kt)("inlineCode",{parentName:"p"},"token")," is stored in Redis for the duration of a user session and also sent in the login response to the banking application client (mobile/ browser). The client application then sends the ",(0,s.kt)("inlineCode",{parentName:"p"},"token")," with every request to server and server validates it before processing the request."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"auth",src:n(11621).Z,width:"1610",height:"1250"})),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Redis Stack supports the ",(0,s.kt)("strong",{parentName:"p"},"JSON")," data type and allows you to index and querying JSON and ",(0,s.kt)("a",{parentName:"p",href:"https://redis.io/docs/stack/"},(0,s.kt)("u",null,(0,s.kt)("strong",{parentName:"a"},"more"))),". So your session store is not limited to simple key-value stringified data.")),(0,s.kt)("p",null,"The session store houses critical information related to each user as they navigate an application for the duration of their session. Mobile banking session data may include, but is not limited to following information:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"User's profile information, such as name, date of birth, email address, etc."),(0,s.kt)("li",{parentName:"ul"},"User's permissions, such as ",(0,s.kt)("inlineCode",{parentName:"li"},"user"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"admin"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"supervisor"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"super-admin"),", etc."),(0,s.kt)("li",{parentName:"ul"},"Other app-related data like recent transaction(s), balance etc."),(0,s.kt)("li",{parentName:"ul"},"Session expiration, such as one hour from now, one week from now, etc.")),(0,s.kt)("h2",{id:"why-you-should-use-redis-for-mobile-banking-session-management"},"Why you should use Redis for mobile banking session management?"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Resilience"),": Redis Cloud offers incredible resilience with ",(0,s.kt)("strong",{parentName:"p"},"99.999% uptime"),". After all, authentication token stores must provide round-the-clock availability. This ensures that users get uninterrupted, 24/7 access to their applications.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Scalability"),": Token stores need to be highly scalable so that they don't become a bottleneck when a ",(0,s.kt)("strong",{parentName:"p"},"high volume of users")," authenticate at once. Redis Cloud provides ",(0,s.kt)("strong",{parentName:"p"},"< 1ms latency")," at incredibly high throughput (up to ",(0,s.kt)("strong",{parentName:"p"},"100MM ops/second"),") which makes authentication and session data access much faster!")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Integration with common libraries and platforms"),": Since Redis open source is integrated into most session management libraries and platforms, Redis Cloud can seamlessly integrate when upgrading from open source Redis (e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"express-session")," and ",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/connect-redis-stack"},(0,s.kt)("inlineCode",{parentName:"a"},"connect-redis-stack"))," libraries integration is demonstrated in this tutorial)"))),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"Read our ebook that answers the question: ",(0,s.kt)("a",{parentName:"p",href:"https://redis.com/docs/json-web-tokens-jwts-are-not-safe/"},(0,s.kt)("u",null,(0,s.kt)("strong",{parentName:"a"},"Are JSON Web Tokens (JWT) Safe?")))," It discusses when and how to safely use JWTs, with battle-tested solutions for session management.")),(0,s.kt)("h2",{id:"building-session-management-with-redis"},"Building session management with Redis"),(0,s.kt)(r.default,{mdxType:"MobileBankingSourceCode"}),(0,s.kt)("p",null,"Download the above source code and run following command to start the demo application"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"docker compose up\n")),(0,s.kt)("p",null,"After docker up & running, open ",(0,s.kt)("a",{parentName:"p",href:"http://localhost:8080/"},"http://localhost:8080/")," url in browser to view application"),(0,s.kt)("h3",{id:"data-seeding"},"Data seeding"),(0,s.kt)(l.default,{mdxType:"MobileBankingDataSeeding"}),(0,s.kt)("h3",{id:"session-configuration"},"Session configuration"),(0,s.kt)("p",null,"Redis is integrated into many session management libraries, We will be using ",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/connect-redis-stack"},"connect-redis-stack")," library for this demo which provides Redis session storage for your\n",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/express-session"},"express-session")," application."),(0,s.kt)("p",null,"The following code illustrates configuring Redis sessions and with ",(0,s.kt)("inlineCode",{parentName:"p"},"express-session"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="app/server.js"',title:'"app/server.js"'},"import session from 'express-session';\nimport { RedisStackStore } from 'connect-redis-stack';\n\n/* configure your session store */\nconst store = new RedisStackStore({\n  client: redis, //redis client\n  prefix: 'redisBank:', //redis key prefix\n  ttlInSeconds: 3600, //session expiry time\n});\n\nconst app = express();\n\n// ...\n\napp.use(\n  session({\n    store: store, //using redis store for session\n    resave: false,\n    saveUninitialized: false,\n    secret: '5UP3r 53Cr37', //from env file\n  }),\n);\n\n//...\napp.listen(8080, () => console.log('Listening on port 8080'));\n")),(0,s.kt)("h3",{id:"login-api-session-id-generation"},"Login API (Session id generation)"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"login page",src:n(2721).Z,width:"900",height:"674"})),(0,s.kt)("p",null,"Let's look at the ",(0,s.kt)("inlineCode",{parentName:"p"},"/perform_login")," API code which is triggered on the click of Login button from ",(0,s.kt)("a",{parentName:"p",href:"http://localhost:8080/"},"login page")),(0,s.kt)("p",null,"Since ",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/connect-redis-stack"},"connect-redis-stack")," is an express middleware, a session is automatically created at the start of the request, and updated at the end of the HTTP(API) response if ",(0,s.kt)("inlineCode",{parentName:"p"},"req.session")," variable is altered."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"app.post('/perform_login', (req, res) => {\n  let session = req.session;\n  console.log(session);\n  /*\n  Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  }\n  */\n  //hardcoded user for demo\n  if (req.body.username == 'bob' && req.body.password == 'foobared') {\n    //on successful login (for bob user)\n    session = req.session;\n    session.userid = req.body.username; //create session data\n    res.redirect('/index.html');\n  } else {\n    res.redirect('/auth-login.html');\n  }\n});\n")),(0,s.kt)("p",null,"In above code - ",(0,s.kt)("inlineCode",{parentName:"p"},"session.userid"),' variable is assigned with a value on successful login (for "bob" user), so a session is created in Redis with assigned data and only Redis key (sessionId) is stored in client cookie.'),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Dashboard page after successful login\n",(0,s.kt)("img",{alt:"dashboard",src:n(63820).Z,width:"1000",height:"492"}))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Session entry in Redis\n",(0,s.kt)("img",{alt:"session entry",src:n(6925).Z,width:"900",height:"402"}))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Open developer tools in Dashboard page to check client cookie ",(0,s.kt)("inlineCode",{parentName:"p"},"connect.sid")," (containing only sessionId)\n",(0,s.kt)("img",{alt:"browser cookie entry",src:n(97867).Z,width:"900",height:"375"})))),(0,s.kt)("p",null,"Now on every other API request from client, ",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/connect-redis-stack"},"connect-redis-stack")," library makes sure to load session details from redis to ",(0,s.kt)("inlineCode",{parentName:"p"},"req.session")," variable based on the client cookie (sessionId)."),(0,s.kt)("h3",{id:"balance-api-session-storage"},"Balance API (Session storage)"),(0,s.kt)("p",null,"Consider the below ",(0,s.kt)("inlineCode",{parentName:"p"},"/transaction/balance")," API code to demonstrate session storage."),(0,s.kt)("p",null,"We have to modify the ",(0,s.kt)("inlineCode",{parentName:"p"},"req.session")," variable to update session data.\nLet's add more session data like current balance amount of the user ."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="app/routers/transaction-router.js"',title:'"app/routers/transaction-router.js"'},"/* fetch all transactions up to an hour ago /transaction/balance */\ntransactionRouter.get('/balance', async (req, res) => {\n  const balance = await redis.ts.range(\n    BALANCE_TS,\n    Date.now() - 1000 * 60 * 5,\n    Date.now(),\n  );\n\n  let balancePayload = balance.map((entry) => {\n    return {\n      x: entry.timestamp,\n      y: entry.value,\n    };\n  });\n\n  let session = req.session;\n  if (session.userid && balancePayload.length) {\n    //adding latest BalanceAmount to session\n    session.currentBalanceAmount = balancePayload[balancePayload.length - 1]; //updating session data\n  }\n\n  res.send(balancePayload);\n});\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Updated session entry in Redis with ",(0,s.kt)("inlineCode",{parentName:"p"},"currentBalanceAmount")," field ('x' denoting timestamp and 'y' denoting balance amount at that timestamp)\n",(0,s.kt)("img",{alt:"session update",src:n(41909).Z,width:"1326",height:"666"}))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Verify the latest balance amount in the Dashboard UI"),(0,s.kt)("img",{src:d,alt:"dashboard balance",width:"500",className:"margin-bottom--md"}))),(0,s.kt)("h2",{id:"ready-to-use-redis-in-session-management"},"Ready to use Redis in session management?"),(0,s.kt)("p",null,"Hopefully, this tutorial has helped you visualize how to use Redis for better session management, specifically in the context of mobile banking. For additional resources related to this topic, check out the links below:"),(0,s.kt)("h3",{id:"additional-resources"},"Additional resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://redis.com/docs/json-web-tokens-jwts-are-not-safe/"},"Are JSON Web Tokens (JWT) Safe?"))),(0,s.kt)(i.default,{mdxType:"GeneralAdditionalResources"}))}b.isMDXComponent=!0},65089:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/bank-transaction-data-1b37f7f9cb0f5b2c97754ab3b51d11c5.png"},91622:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/bank-transaction-json-37fcad9b0904e7cc5c148e6fd1e450e1.png"},11621:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/auth-ce835da36b3a8a98af1a6f00f2c99e76.png"},97867:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/browser-cookie-entry-55129ddc5941dee1069479b8d390f08b.png"},63820:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/demo-dashboard-38853e7c8e050bc79cf80e758b32d3bc.png"},2721:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/demo-login-e2cca3f6de9690ba006e8fb6ae689c40.png"},41909:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/session-balance-update2-c680fa28af77a19dce6ddd1641a127d1.png"},6925:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/session-entry-db94484aa31ea134008dc80518a90867.png"}}]);